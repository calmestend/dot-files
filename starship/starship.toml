format = """
$username\
$directory\
$git_branch\
$git_status\
$c\
$elixir\
$elm\
$golang\
$haskell\
$java\
$julia\
$nodejs\
$nim\
$rust\
$scala\
$conda\
$python\
Ó∞É
"""

palette = "monochrome"

[palettes.monochrome]
background = '#000'
foreground = '#fff'

[directory]
format = "(fg:foreground)[ $path ]($style)(fg:foreground)"
style = "bg:background fg:foreground"
truncation_length = 5
truncation_symbol = "../"

[directory.substitutions]
Downloads = "ÔÄô "
music = "ÔÄÅ "
personal = "Ó∂ß "
work = "ÔÑ° "

[fill]
style = "fg:foreground"
symbol = " "

[git_branch]
format = "(fg:foreground)[$symbol $branch]($style)(fg:foreground) "
style = "bg:background fg:foreground"
symbol = "Ôêò"

[git_status]
disabled = false
style = "bg:background fg:foreground"
format = '([$all_status$ahead_behind]($style))(fg:foreground) '
up_to_date = '[‚úì ](bg:background fg:foreground)'
untracked = '[?\($count\)](bg:background fg:foreground)'
stashed = '[\$](bg:background fg:foreground)'
modified = '[!\($count\)](bg:background fg:foreground)'
renamed = '[¬ª\($count\)](bg:background fg:foreground)'
deleted = '[‚úò\($count\)](style)'
staged = '[++\($count\)](bg:background fg:foreground)'
ahead = '[‚á°\(${count}\)](bg:background fg:foreground)'
diverged = '‚áï[\[](bg:background fg:foreground)[‚á°\(${ahead_count}\)](bg:background fg:foreground)[‚á£\(${behind_count}\)](bg:background fg:foreground)[\]](bg:background fg:foreground)'
behind = '[‚á£\(${count}\)](bg:background fg:foreground)'

[username]
disabled = true
format = "(fg:foreground)[$user]($style)(fg:foreground) "
show_always = true
style_root = "bg:background fg:iris"
style_user = "bg:background fg:iris"

# Languages

[c]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óòû "

[elixir]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óâµ "

[elm]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óò¨ "

[golang]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óòß "

[haskell]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óù∑ "

[java]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óâñ "

[julia]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óò§ "

[nodejs]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Û∞éô "

[nim]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Û∞Ü• "

[rust]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óû®"

[scala]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = "Óú∑ "

[python]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$version]($style)(fg:foreground) "
disabled = false
symbol = 'Óúº '

[conda]
style = "bg:background fg:foreground"
format = "(fg:foreground)[$symbol$environment]($style)(fg:foreground) "
disabled = false
symbol = 'üÖí '
